=== RUN   TestNewDAO
--- PASS: TestNewDAO (0.00s)
=== RUN   TestPropose
=== RUN   TestPropose/Success
--- PASS: TestPropose/Success (0.00s)
=== RUN   TestPropose/Non-member
--- PASS: TestPropose/Non-member (0.00s)
=== RUN   TestPropose/Unknown_message_type
--- PASS: TestPropose/Unknown_message_type (0.00s)
--- PASS: TestPropose (0.00s)
=== RUN   TestVote
=== RUN   TestVote/Success_no
--- PASS: TestVote/Success_no (0.00s)
=== RUN   TestVote/Success_yes
--- PASS: TestVote/Success_yes (0.00s)
=== RUN   TestVote/Unknown_proposal
--- PASS: TestVote/Unknown_proposal (0.00s)
=== RUN   TestVote/Non-member
--- PASS: TestVote/Non-member (0.00s)
=== RUN   TestVote/Invalid_vote
--- PASS: TestVote/Invalid_vote (0.00s)
--- PASS: TestVote (0.00s)
=== RUN   TestExecuteProposal
=== RUN   TestExecuteProposal/Conditions_not_met
--- PASS: TestExecuteProposal/Conditions_not_met (0.00s)
=== RUN   TestExecuteProposal/Success
--- PASS: TestExecuteProposal/Success (0.00s)
=== RUN   TestExecuteProposal/Unknown_proposal
--- PASS: TestExecuteProposal/Unknown_proposal (0.00s)
=== RUN   TestExecuteProposal/Non-member
--- PASS: TestExecuteProposal/Non-member (0.00s)
--- PASS: TestExecuteProposal (0.00s)
=== RUN   TestInstantExecute
=== RUN   TestInstantExecute/Success
--- PASS: TestInstantExecute/Success (0.00s)
=== RUN   TestInstantExecute/Unknown_message_type
--- PASS: TestInstantExecute/Unknown_message_type (0.00s)
=== RUN   TestInstantExecute/Non-member
--- PASS: TestInstantExecute/Non-member (0.00s)
--- PASS: TestInstantExecute (0.00s)
=== RUN   TestGetMembers
--- PASS: TestGetMembers (0.00s)
=== RUN   TestAddMemberProposal
--- PASS: TestAddMemberProposal (0.00s)
=== RUN   TestRemoveMemberProposal
--- PASS: TestRemoveMemberProposal (0.00s)
=== RUN   TestAddRoleToUserProposal
--- PASS: TestAddRoleToUserProposal (0.00s)
=== RUN   TestRemoveRoleFromUserProposal
--- PASS: TestRemoveRoleFromUserProposal (0.00s)
ok      gno/p/basedao 	1.46s
=== RUN   TestComputeVotingPowers
=== RUN   TestComputeVotingPowers/example_1
--- PASS: TestComputeVotingPowers/example_1 (0.00s)
=== RUN   TestComputeVotingPowers/example_2
--- PASS: TestComputeVotingPowers/example_2 (0.00s)
=== RUN   TestComputeVotingPowers/example_3
--- PASS: TestComputeVotingPowers/example_3 (0.00s)
=== RUN   TestComputeVotingPowers/example_4
--- PASS: TestComputeVotingPowers/example_4 (0.03s)
=== RUN   TestComputeVotingPowers/0_-T1s
--- PASS: TestComputeVotingPowers/0_-T1s (0.00s)
=== RUN   TestComputeVotingPowers/100_T1,_1_T2,_1_T3
--- PASS: TestComputeVotingPowers/100_T1,_1_T2,_1_T3 (0.00s)
=== RUN   TestComputeVotingPowers/T3_Abstaining
--- PASS: TestComputeVotingPowers/T3_Abstaining (0.00s)
--- PASS: TestComputeVotingPowers (0.08s)
=== RUN   TestEval
=== RUN   TestEval/2/6%_Yes
--- PASS: TestEval/2/6%_Yes (0.00s)
=== RUN   TestEval/50%_Yes
--- PASS: TestEval/50%_Yes (0.00s)
=== RUN   TestEval/several_T2_&_T3
--- PASS: TestEval/several_T2_&_T3 (0.00s)
=== RUN   TestEval/several_T2_&_T3_eval_true
--- PASS: TestEval/several_T2_&_T3_eval_true (0.00s)
=== RUN   TestEval/only_T1s
--- PASS: TestEval/only_T1s (0.00s)
=== RUN   TestEval/only_T3s
--- PASS: TestEval/only_T3s (0.00s)
=== RUN   TestEval/T3_abstaining
--- PASS: TestEval/T3_abstaining (0.00s)
=== RUN   TestEval/T3_abstaining_w/_votes
--- PASS: TestEval/T3_abstaining_w/_votes (0.00s)
--- PASS: TestEval (0.01s)
=== RUN   TestCondition
--- PASS: TestCondition (0.00s)
=== RUN   TestState
=== RUN   TestState/post_with_public-relationships_basic
--- PASS: TestState/post_with_public-relationships_basic (0.00s)
=== RUN   TestState/post_with_public-relationships_few-votes
--- PASS: TestState/post_with_public-relationships_few-votes (0.00s)
=== RUN   TestState/post_without_public-relationships_basic
--- PASS: TestState/post_without_public-relationships_basic (0.00s)
=== RUN   TestState/post_without_public-relationships_few-votes
--- PASS: TestState/post_without_public-relationships_few-votes (0.00s)
=== RUN   TestState/post_after_public-relationships_changes_basic
--- PASS: TestState/post_after_public-relationships_changes_basic (0.00s)
=== RUN   TestState/post_after_public-relationships_changes_few-votes
--- PASS: TestState/post_after_public-relationships_changes_few-votes (0.00s)
=== RUN   TestState/post_public-relationships_alone_basic
--- PASS: TestState/post_public-relationships_alone_basic (0.00s)
=== RUN   TestState/post_public-relationships_alone_few-votes
--- PASS: TestState/post_public-relationships_alone_few-votes (0.00s)
=== RUN   TestState/invest_with_finance_officer_basic
--- PASS: TestState/invest_with_finance_officer_basic (0.00s)
=== RUN   TestState/invest_with_finance_officer_few-votes
--- PASS: TestState/invest_with_finance_officer_few-votes (0.00s)
=== RUN   TestState/invest_without_finance_officer_basic
--- PASS: TestState/invest_without_finance_officer_basic (0.00s)
=== RUN   TestState/invest_without_finance_officer_few-votes
--- PASS: TestState/invest_without_finance_officer_few-votes (0.00s)
=== RUN   TestState/invest_alone_basic
--- PASS: TestState/invest_alone_basic (0.00s)
=== RUN   TestState/invest_alone_few-votes
--- PASS: TestState/invest_alone_few-votes (0.00s)
--- PASS: TestState (0.00s)
ok      gno/p/daocond 	0.12s
=== RUN   TestNewDAO
--- PASS: TestNewDAO (0.00s)
ok      gno/p/daokit 	0.01s
=== RUN   TestNewEvent
gno/p/events: test pkg: panic: reflect: reflect.Value.SetString using value obtained using unexported field
go stacktrace:
goroutine 1 [running]:
runtime/debug.Stack()
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/runtime/debug/stack.go:26 +0x5e
github.com/gnolang/gno/gnovm/pkg/test.(*TestOptions).runTestFiles.func1()
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/test/test.go:280 +0xfb
panic({0xd72500?, 0xc005102680?})
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/runtime/panic.go:785 +0x132
github.com/gnolang/gno/gnovm/pkg/gnolang.(*Machine).Run.func1()
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/machine.go:1162 +0x9d
panic({0xd72500?, 0xc005102680?})
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/runtime/panic.go:785 +0x132
reflect.flag.mustBeAssignableSlow(0xc006a68df0?)
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/reflect/value.go:254 +0xb4
reflect.flag.mustBeAssignable(...)
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/reflect/value.go:244
reflect.Value.SetString({0xd72500?, 0xc005102670?, 0xc00b624088?}, {0xc00bca9421, 0x1c})
	/home/linuxbrew/.linuxbrew/Cellar/go/1.23.5/libexec/src/reflect/value.go:2514 +0x48
github.com/gnolang/gno/gnovm/pkg/gnolang.gno2GoValue(0xc010e5b740, {0xd72500?, 0xc005102670?, 0x0?})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/gonative.go:1030 +0x44a
github.com/gnolang/gno/gnovm/pkg/gnolang.gno2GoValue(0xc00b615d60, {0xc00b45daa0?, 0xc005102670?, 0xc00423e000?})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/gonative.go:1133 +0xb6f
github.com/gnolang/gno/gnovm/pkg/gnolang.gno2GoValue(0xc00b5691d0, {0xda74a0?, 0xc0051025f0?, 0xc000580008?})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/gonative.go:1068 +0x985
github.com/gnolang/gno/gnovm/pkg/gnolang.(*Machine).doOpCallGoNative(0xc00cebf688)
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/gonative.go:1348 +0x2e5
github.com/gnolang/gno/gnovm/pkg/gnolang.(*Machine).Run(0xc00cebf688)
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/machine.go:1400 +0xae5
github.com/gnolang/gno/gnovm/pkg/gnolang.(*Machine).Eval(0xc00cebf688, {0x11a5b10, 0xc00b45d3e0})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/gnolang/machine.go:743 +0x63c
github.com/gnolang/gno/gnovm/pkg/test.(*TestOptions).runTestFiles(0xc0003c2d20, 0xc00a9f5440, 0xc00a311ab8, {0xed9741?, 0xc0100f0270?}, {0x11b1038, 0xc00a4a61e0})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/test/test.go:325 +0x832
github.com/gnolang/gno/gnovm/pkg/test.Test(0xc008f2dd40, {0xc0003fe9a8, 0xc}, 0xc0003c2d20)
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/pkg/test/test.go:218 +0x305
main.execTest.func2()
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/cmd/gno/test.go:216 +0x2f
main.catchRuntimeError({0xc00bed2c90?, 0xc?}, {0x1195788?, 0xc00008c068?}, 0x2?)
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/cmd/gno/lint.go:298 +0x73
main.execTest(0xc000402900, {0xc00046e320?, 0x1?, 0x1?}, {0x11a83b0, 0xc0003c1770})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/cmd/gno/test.go:215 +0x691
main.newTestCmd.func1({0x0?, 0xc000034130?}, {0xc00046e320?, 0xc00046d020?, 0x0?})
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/cmd/gno/test.go:92 +0x30
github.com/gnolang/gno/tm2/pkg/commands.(*Command).Run(0xc0002f3ea8?, {0x119a3f8?, 0x1877980?})
	/home/mikael-vallenet/zenao/gnobuild/gno/tm2/pkg/commands/command.go:255 +0x18e
github.com/gnolang/gno/tm2/pkg/commands.(*Command).Run(0xc0003911e0?, {0x119a3f8?, 0x1877980?})
	/home/mikael-vallenet/zenao/gnobuild/gno/tm2/pkg/commands/command.go:259 +0x13a
github.com/gnolang/gno/tm2/pkg/commands.(*Command).ParseAndRun(0xc0003911e0, {0x119a3f8, 0x1877980}, {0xc000034110?, 0xc000391760?, 0xc000391810?})
	/home/mikael-vallenet/zenao/gnobuild/gno/tm2/pkg/commands/command.go:140 +0x49
github.com/gnolang/gno/tm2/pkg/commands.(*Command).Execute(0x11a83b0?, {0x119a3f8?, 0x1877980?}, {0xc000034110?, 0x17d8aa8?, 0xc0000061c0?})
	/home/mikael-vallenet/zenao/gnobuild/gno/tm2/pkg/commands/command.go:117 +0x2c
main.main()
	/home/mikael-vallenet/zenao/gnobuild/gno/gnovm/cmd/gno/main.go:13 +0x5f

gno machine: Machine:
    PreprocessorMode: false
    Op: [OpHalt OpBody OpPopResults OpExec OpBody OpPopResults OpExec OpBody OpDefine OpBody OpDefine OpBody OpPopBlock OpBody OpPanic2 OpReturnCallDefers OpBody OpPopFrameAndReset OpPopBlock OpBody OpPopResults]
    Values: (len: 5)
          #4 (New func(conf *gno.land/p/zenao/basedao.Config)( *gno.land/p/zenao/basedao.DAO))
          #3 (NewEvent func(conf *gno.land/p/zenao/events.Config)( *gno.land/p/zenao/events.Event))
          #2 (TestNewEvent testing.testingFunc)
          #1 (tRunner func(t *testing.T,fn testing.testingFunc,verbose bool)())
          #0 (RunTest func(runFlag string,verbose bool,test testing.InternalTest)(ret string))
    Exprs:
    Stmts:
          #9 bodyStmt[0/0/2]=(end)
          #8 bodyStmt[0/0/2]=dur<!VPBlock(1,1)> := unixNano<VPBlock(4,41)>() - start<VPBlock(2,3)>
          #7 bodyStmt[0/0/1]=(end)
          #6 bodyStmt[0/0/3]=core<!VPBlock(1,3)> := daokit<VPBlock(2,4)>.NewCore()
          #5 bodyStmt[0/0/3]=event<!VPBlock(1,5)> := &(Event<VPBlock(3,1)>{Creator<VPField(0,1,Creator)>: conf<VPBlock(1,0)>.Creator, StartDate<VPField(0,2,StartDate)>: conf<VPBlock(1,0)>.StartDate, EndDate<VPField(0,3,EndDate)>: conf<VPBlock(1,0)>.EndDate, Capacity<VPField(0,4,Capacity)>: conf<VPBlock(1,0)>.Capacity, GetProfileString<VPField(0,6,GetProfileString)>: conf<VPBlock(1,0)>.GetProfileString, SetProfileString<VPField(0,7,SetProfileString)>: conf<VPBlock(1,0)>.SetProfileString, Org<VPField(0,8,Org)>: dao<VPBlock(1,4)>, Location<VPField(0,5,Location)>: conf<VPBlock(1,0)>.Location})*
          #4 bodyStmt[0/0/5]=if event<VPBlock(2,3)>.Org.Members.GetMembers()[(const (1 int))] != alice<VPBlock(4,0)>.String() { t<VPBlock(2,0)>.Fatalf((const ("expected %s, got %s" string)), alice<VPBlock(4,0)>.String(), event<VPBlock(2,3)>.Org.Members.GetMembers()[(const (1 int))]) }*
          #3 return
          #2 bodyStmt[0/0/5]=(end)
          #1 return
          #0 bodyStmt[0/0/3]=if !t<VPBlock(2,4)>.verbose && t<VPBlock(2,4)>.Failed() { t<VPBlock(2,4)>.printFailure() }
    Blocks:
          @(686) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61f0e0,Source:switch err<VPBlock(2,0)> { case ...,Parent:0xc00b61ed20)
 (s vals) @(686) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc004cde3b0,Source:switch err<VPBlock(2,0)> { case ...,Parent:0xc004cdeab0)
 (s typs) @(686) []
          @(793) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61ed20,Source:func func(){ err<!VPBlock(1,0)> ...,Parent:0xc00b56d2c0)
            err: (&(struct{("GetProfileString is required" string)} errors.errorString) *errors.errorString)
            dur: (undefined)
 (s vals) @(793) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc004cdeab0,Source:func func(){ err<!VPBlock(1,0)> ...,Parent:0xc005194430)
            err: (undefined)
            dur: (0 int64)
 (s typs) @(793) [interface{} int64]
          @(971) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61e5a0,Source:if conf<VPBlock(2,0)>.GetProfile...,Parent:0xc00b61e1e0)
 (s vals) @(971) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005a3ed30,Source:if conf<VPBlock(2,0)>.GetProfile...,Parent:0xc005a4e430)
 (s typs) @(971) []
          @(1078) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61e1e0,Source:func New(conf *(Config<VPBlock(2...,Parent:0xc00b59c1e0)
            conf: (&(struct{("event" string),("this is an event" string),( string),(&(struct{(&(struct{(&(struct{(&(struct{("organizer" string),(undefined),(2 int8),(3 int),(&(struct{("gatekeeper" string),(&(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(undefined),(1 int8),(2 int),(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(&(struct{("participant" string),("Person attending the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.RoleManager) *gno.land/p/zenao/role_manager.RoleManager),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/basedao.MembersStore) *gno.land/p/zenao/basedao.MembersStore),(false bool),(true bool),(undefined),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/basedao.ProfileStringSetter),(nil gno.land/p/zenao/basedao.ProfileStringGetter)} gno.land/p/zenao/basedao.Config) *gno.land/p/zenao/basedao.Config)
            .res_0: (nil *gno.land/p/zenao/basedao.DAO)
            members: (&(struct{(&(struct{(&(struct{(&(struct{("organizer" string),(undefined),(2 int8),(3 int),(&(struct{("gatekeeper" string),(&(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(undefined),(1 int8),(2 int),(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(&(struct{("participant" string),("Person attending the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.RoleManager) *gno.land/p/zenao/role_manager.RoleManager),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/basedao.MembersStore) *gno.land/p/zenao/basedao.MembersStore)
            core: (undefined)
            dao: (undefined)
 (s vals) @(1078) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005a4e430,Source:func New(conf *(Config<VPBlock(2...,Parent:0xc00aeeec30)
            conf: (nil *gno.land/p/zenao/basedao.Config)
            .res_0: (nil *gno.land/p/zenao/basedao.DAO)
            members: (nil *gno.land/p/zenao/basedao.MembersStore)
            core: (nil *gno.land/p/zenao/daokit.Core)
            dao: (nil *gno.land/p/zenao/basedao.DAO)
 (s typs) @(1078) [*gno.land/p/zenao/basedao.Config *gno.land/p/zenao/basedao.DAO *gno.land/p/zenao/basedao.MembersStore *gno.land/p/zenao/daokit.Core *gno.land/p/zenao/basedao.DAO]
          @(5454) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b58b860,Source:func NewEvent(conf *(Config<VPBl...,Parent:0xc00aeba1e0)
            conf: (&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),("event" string),("this is an event" string),( string),(0 int64),(0 int64),(0 uint32),(nil gno.land/p/zenao/events.GetProfileString),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/events.SetProfileString),( string),(nil *gno.land/p/zenao/zenao/v1.EventLocation)} gno.land/p/zenao/events.Config) *gno.land/p/zenao/events.Config)
            .res_0: (nil *gno.land/p/zenao/events.Event)
            roles: (slice[(struct{("organizer" string),("Person in charge of the organization of the event" string)} gno.land/p/zenao/role_manager.RoleInfo),(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string)} gno.land/p/zenao/role_manager.RoleInfo),(struct{("participant" string),("Person attending the event" string)} gno.land/p/zenao/role_manager.RoleInfo)] []gno.land/p/zenao/role_manager.RoleInfo)
            members: (slice[(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(slice[("organizer" string)] []string)} gno.land/p/zenao/basedao.Member),(struct{( string),(slice[("organizer" string)] []string)} gno.land/p/zenao/basedao.Member)] []gno.land/p/zenao/basedao.Member)
            dao: (undefined)
            event: (undefined)
 (s vals) @(5454) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00847f430,Source:func NewEvent(conf *(Config<VPBl...,Parent:0xc000164330)
            conf: (nil *gno.land/p/zenao/events.Config)
            .res_0: (nil *gno.land/p/zenao/events.Event)
            roles: (nil []gno.land/p/zenao/role_manager.RoleInfo)
            members: (nil []gno.land/p/zenao/basedao.Member)
            dao: (nil *gno.land/p/zenao/basedao.DAO)
            event: (nil *gno.land/p/zenao/events.Event)
 (s typs) @(5454) [*gno.land/p/zenao/events.Config *gno.land/p/zenao/events.Event []gno.land/p/zenao/role_manager.RoleInfo []gno.land/p/zenao/basedao.Member *gno.land/p/zenao/basedao.DAO *gno.land/p/zenao/events.Event]
          @(6201) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b58a3c0,Source:func TestNewEvent(t *(testing<VP...,Parent:0xc00b54cd20)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            profile: (struct{(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree)} gno.land/p/zenao/events_test.mockProfile)
            conf: (struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),("event" string),("this is an event" string),( string),(0 int64),(0 int64),(0 uint32),(nil gno.land/p/zenao/events.GetProfileString),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/events.SetProfileString),( string),(nil *gno.land/p/zenao/zenao/v1.EventLocation)} gno.land/p/zenao/events.Config)
            event: (undefined)
 (s vals) @(6201) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00a7e9830,Source:func TestNewEvent(t *(testing<VP...,Parent:0xc00776c330)
            t: (nil *testing.T)
            profile: (nil gno.land/p/zenao/events_test.mockProfile)
            conf: (nil gno.land/p/zenao/events.Config)
            event: (nil *gno.land/p/zenao/events.Event)
 (s typs) @(6201) [*testing.T gno.land/p/zenao/events_test.mockProfile gno.land/p/zenao/events.Config *gno.land/p/zenao/events.Event]
          @(6695) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b56d2c0,Source:func tRunner(t *(T<VPBlock(2,32)...,Parent:0xc00aa6ed20)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            fn: (TestNewEvent testing.testingFunc)
            verbose: (true bool)
            start: (1739896845557935298 int64)
 (s vals) @(6695) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005194430,Source:func tRunner(t *(T<VPBlock(2,32)...,Parent:0xc00b013b30)
            t: (nil *testing.T)
            fn: (nil testing.testingFunc)
            verbose: (false bool)
            start: (0 int64)
 (s typs) @(6695) [*testing.T testing.testingFunc bool int64]
          @(6967) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b56cf00,Source:func RunTest(runFlag (const-type...,Parent:0xc00aa6ed20)
            runFlag: ("" string)
            verbose: (true bool)
            test: (struct{("TestNewEvent" string),(TestNewEvent testing.testingFunc)} testing.InternalTest)
            ret: ( string)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            report: (undefined)
            out: (undefined)
 (s vals) @(6967) Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00517d830,Source:func RunTest(runFlag (const-type...,Parent:0xc00b013b30)
            runFlag: ( string)
            verbose: (false bool)
            test: (nil testing.InternalTest)
            ret: ( string)
            t: (nil *testing.T)
            report: (nil testing.Report)
            out: (nil gonative{[]uint8})
 (s typs) @(6967) [string bool testing.InternalTest string *testing.T testing.Report gonative{[]uint8}]
    Blocks (other):
          #7 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61ed20,Source:func func(){ err<!VPBlock(1,0)> ...,Parent:0xc00b56d2c0)
            err: (&(struct{("GetProfileString is required" string)} errors.errorString) *errors.errorString)
            dur: (undefined)
 (static) #7 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc004cdeab0,Source:func func(){ err<!VPBlock(1,0)> ...,Parent:0xc005194430)
            err: (undefined)
            dur: (0 int64)
          #6 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61e5a0,Source:if conf<VPBlock(2,0)>.GetProfile...,Parent:0xc00b61e1e0)
 (static) #6 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005a3ed30,Source:if conf<VPBlock(2,0)>.GetProfile...,Parent:0xc005a4e430)
          #5 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b61e1e0,Source:func New(conf *(Config<VPBlock(2...,Parent:0xc00b59c1e0)
            conf: (&(struct{("event" string),("this is an event" string),( string),(&(struct{(&(struct{(&(struct{(&(struct{("organizer" string),(undefined),(2 int8),(3 int),(&(struct{("gatekeeper" string),(&(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(undefined),(1 int8),(2 int),(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(&(struct{("participant" string),("Person attending the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.RoleManager) *gno.land/p/zenao/role_manager.RoleManager),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/basedao.MembersStore) *gno.land/p/zenao/basedao.MembersStore),(false bool),(true bool),(undefined),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/basedao.ProfileStringSetter),(nil gno.land/p/zenao/basedao.ProfileStringGetter)} gno.land/p/zenao/basedao.Config) *gno.land/p/zenao/basedao.Config)
            .res_0: (nil *gno.land/p/zenao/basedao.DAO)
            members: (&(struct{(&(struct{(&(struct{(&(struct{("organizer" string),(undefined),(2 int8),(3 int),(&(struct{("gatekeeper" string),(&(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(undefined),(1 int8),(2 int),(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("participant" string),(&(struct{("participant" string),("Person attending the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(&(struct{(&(struct{("organizer" string),(&(struct{("organizer" string),("Person in charge of the organization of the event" string),(&(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.Role) *gno.land/p/zenao/role_manager.Role),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/role_manager.RoleManager) *gno.land/p/zenao/role_manager.RoleManager),(&(struct{(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(undefined),(1 int8),(2 int),(&(struct{( string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node),(&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(struct{} struct{}),(0 int8),(1 int),(nil *gno.land/p/demo/avl.Node),(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Node) *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree) *gno.land/p/demo/avl.Tree)} gno.land/p/zenao/basedao.MembersStore) *gno.land/p/zenao/basedao.MembersStore)
            core: (undefined)
            dao: (undefined)
 (static) #5 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005a4e430,Source:func New(conf *(Config<VPBlock(2...,Parent:0xc00aeeec30)
            conf: (nil *gno.land/p/zenao/basedao.Config)
            .res_0: (nil *gno.land/p/zenao/basedao.DAO)
            members: (nil *gno.land/p/zenao/basedao.MembersStore)
            core: (nil *gno.land/p/zenao/daokit.Core)
            dao: (nil *gno.land/p/zenao/basedao.DAO)
          #4 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b58b860,Source:func NewEvent(conf *(Config<VPBl...,Parent:0xc00aeba1e0)
            conf: (&(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),("event" string),("this is an event" string),( string),(0 int64),(0 int64),(0 uint32),(nil gno.land/p/zenao/events.GetProfileString),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/events.SetProfileString),( string),(nil *gno.land/p/zenao/zenao/v1.EventLocation)} gno.land/p/zenao/events.Config) *gno.land/p/zenao/events.Config)
            .res_0: (nil *gno.land/p/zenao/events.Event)
            roles: (slice[(struct{("organizer" string),("Person in charge of the organization of the event" string)} gno.land/p/zenao/role_manager.RoleInfo),(struct{("gatekeeper" string),("Person in charge of the event's security & access control" string)} gno.land/p/zenao/role_manager.RoleInfo),(struct{("participant" string),("Person attending the event" string)} gno.land/p/zenao/role_manager.RoleInfo)] []gno.land/p/zenao/role_manager.RoleInfo)
            members: (slice[(struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),(slice[("organizer" string)] []string)} gno.land/p/zenao/basedao.Member),(struct{( string),(slice[("organizer" string)] []string)} gno.land/p/zenao/basedao.Member)] []gno.land/p/zenao/basedao.Member)
            dao: (undefined)
            event: (undefined)
 (static) #4 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00847f430,Source:func NewEvent(conf *(Config<VPBl...,Parent:0xc000164330)
            conf: (nil *gno.land/p/zenao/events.Config)
            .res_0: (nil *gno.land/p/zenao/events.Event)
            roles: (nil []gno.land/p/zenao/role_manager.RoleInfo)
            members: (nil []gno.land/p/zenao/basedao.Member)
            dao: (nil *gno.land/p/zenao/basedao.DAO)
            event: (nil *gno.land/p/zenao/events.Event)
          #3 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b58a3c0,Source:func TestNewEvent(t *(testing<VP...,Parent:0xc00b54cd20)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            profile: (struct{(struct{(nil *gno.land/p/demo/avl.Node)} gno.land/p/demo/avl.Tree)} gno.land/p/zenao/events_test.mockProfile)
            conf: (struct{("g1v9kxjcm9ta047h6lta047h6lta047h6lzd40gh" string),("event" string),("this is an event" string),( string),(0 int64),(0 int64),(0 uint32),(nil gno.land/p/zenao/events.GetProfileString),(<*gno.land/p/zenao/events_test.mockProfile>.SetStringField(p *gno.land/p/zenao/events_test.mockProfile,field string,value string)( bool) gno.land/p/zenao/events.SetProfileString),( string),(nil *gno.land/p/zenao/zenao/v1.EventLocation)} gno.land/p/zenao/events.Config)
            event: (undefined)
 (static) #3 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00a7e9830,Source:func TestNewEvent(t *(testing<VP...,Parent:0xc00776c330)
            t: (nil *testing.T)
            profile: (nil gno.land/p/zenao/events_test.mockProfile)
            conf: (nil gno.land/p/zenao/events.Config)
            event: (nil *gno.land/p/zenao/events.Event)
          #2 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b56d2c0,Source:func tRunner(t *(T<VPBlock(2,32)...,Parent:0xc00aa6ed20)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            fn: (TestNewEvent testing.testingFunc)
            verbose: (true bool)
            start: (1739896845557935298 int64)
 (static) #2 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc005194430,Source:func tRunner(t *(T<VPBlock(2,32)...,Parent:0xc00b013b30)
            t: (nil *testing.T)
            fn: (nil testing.testingFunc)
            verbose: (false bool)
            start: (0 int64)
          #1 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00b56cf00,Source:func RunTest(runFlag (const-type...,Parent:0xc00aa6ed20)
            runFlag: ("" string)
            verbose: (true bool)
            test: (struct{("TestNewEvent" string),(TestNewEvent testing.testingFunc)} testing.InternalTest)
            ret: ( string)
            t: (&(struct{("TestNewEvent" string),(true bool),(false bool),(nil []*testing.T),(nil *testing.T),(nil []uint8),(true bool),(undefined),( string)} testing.T) *testing.T)
            report: (undefined)
            out: (undefined)
 (static) #1 Block(ID:0000000000000000000000000000000000000000:0,Addr:0xc00517d830,Source:func RunTest(runFlag (const-type...,Parent:0xc00b013b30)
            runFlag: ( string)
            verbose: (false bool)
            test: (nil testing.InternalTest)
            ret: ( string)
            t: (nil *testing.T)
            report: (nil testing.Report)
            out: (nil gonative{[]uint8})
    Frames:
          #3 [FRAME GOFUNC:0x50c900 RECV:(undefined) (3 args) 21/5/0/10/9]
          #2 [FRAME LABEL:  17/5/0/9/8]
          #1 [FRAME FUNC:tRunner RECV:(undefined) (3 args) 3/1/0/1/2 LASTPKG:testing LASTRLM:Realm(nil)]
          #0 [FRAME FUNC:RunTest RECV:(undefined) (3 args) 1/0/0/0/1 LASTPKG:gno.land/p/zenao/events_test LASTRLM:Realm(nil)]
    Exceptions:

gno stacktrace:
fmt<VPBlock(4,1)>.Fprintf((const-type gonative{io.Writer})(os<VPBlock(4,2)>.Stderr),panic: %v
,err<VPBlock(2,0)>)
    gofunction:func(io.Writer, string, ...interface {}) (int, error)
tRunner<VPBlock(3,42)>(t<VPBlock(1,4)>,test<VPBlock(1,2)>.F,verbose<VPBlock(1,1)>)
    testing/testing.gno:334
package{}.RunTest(,true,package{}.InternalTest<len=2>)
    testing/testing.gno:298

FAIL
FAIL    gno/p/events 	0.03s
FAIL
?       gno/p/jsonutil 	[no test files]
=== RUN   TestNewWithAddress
--- PASS: TestNewWithAddress (0.00s)
=== RUN   TestCreateNewRole
--- PASS: TestCreateNewRole (0.00s)
=== RUN   TestDeleteRole
--- PASS: TestDeleteRole (0.00s)
=== RUN   TestAddPermissionToRole
--- PASS: TestAddPermissionToRole (0.00s)
=== RUN   TestRemovePermissionFromRole
--- PASS: TestRemovePermissionFromRole (0.00s)
=== RUN   TestAddRoleToUser
--- PASS: TestAddRoleToUser (0.00s)
=== RUN   TestRemoveRoleFromUser
--- PASS: TestRemoveRoleFromUser (0.00s)
=== RUN   TestHasPermission
--- PASS: TestHasPermission (0.00s)
=== RUN   TestHasRole
--- PASS: TestHasRole (0.00s)
=== RUN   TestRemoveAllRolesFromUser
--- PASS: TestRemoveAllRolesFromUser (0.00s)
ok      gno/p/role_manager 	0.01s
=== RUN   TestNewUser
--- PASS: TestNewUser (0.00s)
=== RUN   TestTransferOwnership
--- PASS: TestTransferOwnership (0.00s)
ok      gno/p/users 	0.01s
?       gno/p/zenao/v1 	[no test files]
?       gno/r/cockpit 	[no test files]
=== RUN   TestInit
--- PASS: TestInit (0.00s)
ok      gno/r/dao_demo 	0.04s
?       gno/r/event_demo 	[no test files]
=== RUN   TestEvents
--- PASS: TestEvents (0.02s)
=== RUN   TestEventsToJSON
--- PASS: TestEventsToJSON (0.00s)
=== RUN   TestLocationToString
--- PASS: TestLocationToString (0.00s)
ok      gno/r/eventreg 	0.06s
?       gno/r/user_demo 	[no test files]
FAIL
FAIL: 0 build errors, 1 test errors
make: *** [Makefile:34: test-gno] Error 1
