// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: zenao/v1/zenao.proto

package zenaov1

import (
	v1 "github.com/samouraiworld/zenao/backend/polls/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{0}
}

// XXX: add more fields (e.g. version, commit_hash, gno.land version, ...)
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Maintenance   bool                   `protobuf:"varint,1,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetMaintenance() bool {
	if x != nil {
		return x.Maintenance
	}
	return false
}

type EditUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DisplayName   string                 `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Bio           string                 `protobuf:"bytes,2,opt,name=bio,proto3" json:"bio,omitempty"`
	AvatarUri     string                 `protobuf:"bytes,3,opt,name=avatar_uri,json=avatarUri,proto3" json:"avatar_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditUserRequest) Reset() {
	*x = EditUserRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserRequest) ProtoMessage() {}

func (x *EditUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserRequest.ProtoReflect.Descriptor instead.
func (*EditUserRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{2}
}

func (x *EditUserRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EditUserRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *EditUserRequest) GetAvatarUri() string {
	if x != nil {
		return x.AvatarUri
	}
	return ""
}

type EditUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditUserResponse) Reset() {
	*x = EditUserResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserResponse) ProtoMessage() {}

func (x *EditUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserResponse.ProtoReflect.Descriptor instead.
func (*EditUserResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{3}
}

func (x *EditUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAddressRequest) Reset() {
	*x = GetUserAddressRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressRequest) ProtoMessage() {}

func (x *GetUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressRequest.ProtoReflect.Descriptor instead.
func (*GetUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{4}
}

type GetUserAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAddressResponse) Reset() {
	*x = GetUserAddressResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressResponse) ProtoMessage() {}

func (x *GetUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressResponse.ProtoReflect.Descriptor instead.
func (*GetUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // markdown
	ImageUri      string                 `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	StartDate     uint64                 `protobuf:"varint,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`        // unix seconds
	EndDate       uint64                 `protobuf:"varint,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`              // unix seconds
	TicketPrice   float64                `protobuf:"fixed64,6,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"` // XXX: use fixed point?
	Capacity      uint32                 `protobuf:"varint,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location      *EventLocation         `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	Password      string                 `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	Organizers    []string               `protobuf:"bytes,11,rep,name=organizers,proto3" json:"organizers,omitempty"`
	Gatekeepers   []string               `protobuf:"bytes,12,rep,name=gatekeepers,proto3" json:"gatekeepers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{6}
}

func (x *CreateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEventRequest) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *CreateEventRequest) GetStartDate() uint64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *CreateEventRequest) GetEndDate() uint64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *CreateEventRequest) GetTicketPrice() float64 {
	if x != nil {
		return x.TicketPrice
	}
	return 0
}

func (x *CreateEventRequest) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreateEventRequest) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CreateEventRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateEventRequest) GetOrganizers() []string {
	if x != nil {
		return x.Organizers
	}
	return nil
}

func (x *CreateEventRequest) GetGatekeepers() []string {
	if x != nil {
		return x.Gatekeepers
	}
	return nil
}

type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{7}
}

func (x *CreateEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditEventRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EventId        string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // markdown
	ImageUri       string                 `protobuf:"bytes,4,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	StartDate      uint64                 `protobuf:"varint,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`        // unix seconds
	EndDate        uint64                 `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`              // unix seconds
	TicketPrice    float64                `protobuf:"fixed64,7,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"` // XXX: use fixed point?
	Capacity       uint32                 `protobuf:"varint,8,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location       *EventLocation         `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	Password       string                 `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	UpdatePassword bool                   `protobuf:"varint,11,opt,name=update_password,json=updatePassword,proto3" json:"update_password,omitempty"`
	Organizers     []string               `protobuf:"bytes,12,rep,name=organizers,proto3" json:"organizers,omitempty"`
	Gatekeepers    []string               `protobuf:"bytes,13,rep,name=gatekeepers,proto3" json:"gatekeepers,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EditEventRequest) Reset() {
	*x = EditEventRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventRequest) ProtoMessage() {}

func (x *EditEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventRequest.ProtoReflect.Descriptor instead.
func (*EditEventRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{8}
}

func (x *EditEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EditEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditEventRequest) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *EditEventRequest) GetStartDate() uint64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *EditEventRequest) GetEndDate() uint64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *EditEventRequest) GetTicketPrice() float64 {
	if x != nil {
		return x.TicketPrice
	}
	return 0
}

func (x *EditEventRequest) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *EditEventRequest) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EditEventRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EditEventRequest) GetUpdatePassword() bool {
	if x != nil {
		return x.UpdatePassword
	}
	return false
}

func (x *EditEventRequest) GetOrganizers() []string {
	if x != nil {
		return x.Organizers
	}
	return nil
}

func (x *EditEventRequest) GetGatekeepers() []string {
	if x != nil {
		return x.Gatekeepers
	}
	return nil
}

type EditEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditEventResponse) Reset() {
	*x = EditEventResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventResponse) ProtoMessage() {}

func (x *EditEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventResponse.ProtoReflect.Descriptor instead.
func (*EditEventResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{9}
}

func (x *EditEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventGatekeepersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventGatekeepersRequest) Reset() {
	*x = GetEventGatekeepersRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventGatekeepersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventGatekeepersRequest) ProtoMessage() {}

func (x *GetEventGatekeepersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventGatekeepersRequest.ProtoReflect.Descriptor instead.
func (*GetEventGatekeepersRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{10}
}

func (x *GetEventGatekeepersRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetEventGatekeepersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gatekeepers   []string               `protobuf:"bytes,1,rep,name=gatekeepers,proto3" json:"gatekeepers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventGatekeepersResponse) Reset() {
	*x = GetEventGatekeepersResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventGatekeepersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventGatekeepersResponse) ProtoMessage() {}

func (x *GetEventGatekeepersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventGatekeepersResponse.ProtoReflect.Descriptor instead.
func (*GetEventGatekeepersResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{11}
}

func (x *GetEventGatekeepersResponse) GetGatekeepers() []string {
	if x != nil {
		return x.Gatekeepers
	}
	return nil
}

type ValidatePasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatePasswordRequest) Reset() {
	*x = ValidatePasswordRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePasswordRequest) ProtoMessage() {}

func (x *ValidatePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePasswordRequest.ProtoReflect.Descriptor instead.
func (*ValidatePasswordRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{12}
}

func (x *ValidatePasswordRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ValidatePasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ValidatePasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatePasswordResponse) Reset() {
	*x = ValidatePasswordResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePasswordResponse) ProtoMessage() {}

func (x *ValidatePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePasswordResponse.ProtoReflect.Descriptor instead.
func (*ValidatePasswordResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{13}
}

func (x *ValidatePasswordResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type ParticipateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Guests        []string               `protobuf:"bytes,3,rep,name=guests,proto3" json:"guests,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateRequest) Reset() {
	*x = ParticipateRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateRequest) ProtoMessage() {}

func (x *ParticipateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateRequest.ProtoReflect.Descriptor instead.
func (*ParticipateRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{14}
}

func (x *ParticipateRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ParticipateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ParticipateRequest) GetGuests() []string {
	if x != nil {
		return x.Guests
	}
	return nil
}

func (x *ParticipateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CancelParticipationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelParticipationRequest) Reset() {
	*x = CancelParticipationRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelParticipationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelParticipationRequest) ProtoMessage() {}

func (x *CancelParticipationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelParticipationRequest.ProtoReflect.Descriptor instead.
func (*CancelParticipationRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{15}
}

func (x *CancelParticipationRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type CancelParticipationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelParticipationResponse) Reset() {
	*x = CancelParticipationResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelParticipationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelParticipationResponse) ProtoMessage() {}

func (x *CancelParticipationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelParticipationResponse.ProtoReflect.Descriptor instead.
func (*CancelParticipationResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{16}
}

type ParticipateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSecret  string                 `protobuf:"bytes,1,opt,name=ticket_secret,json=ticketSecret,proto3" json:"ticket_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateResponse) Reset() {
	*x = ParticipateResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateResponse) ProtoMessage() {}

func (x *ParticipateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateResponse.ProtoReflect.Descriptor instead.
func (*ParticipateResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{17}
}

func (x *ParticipateResponse) GetTicketSecret() string {
	if x != nil {
		return x.TicketSecret
	}
	return ""
}

type BroadcastEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AttachTicket  bool                   `protobuf:"varint,3,opt,name=attach_ticket,json=attachTicket,proto3" json:"attach_ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastEventRequest) Reset() {
	*x = BroadcastEventRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastEventRequest) ProtoMessage() {}

func (x *BroadcastEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastEventRequest.ProtoReflect.Descriptor instead.
func (*BroadcastEventRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{18}
}

func (x *BroadcastEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *BroadcastEventRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BroadcastEventRequest) GetAttachTicket() bool {
	if x != nil {
		return x.AttachTicket
	}
	return false
}

type BroadcastEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastEventResponse) Reset() {
	*x = BroadcastEventResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastEventResponse) ProtoMessage() {}

func (x *BroadcastEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastEventResponse.ProtoReflect.Descriptor instead.
func (*BroadcastEventResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{19}
}

type EventLocation struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	VenueName    string                 `protobuf:"bytes,1,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty"`
	Instructions string                 `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"` // markdown
	// Types that are valid to be assigned to Address:
	//
	//	*EventLocation_Geo
	//	*EventLocation_Virtual
	//	*EventLocation_Custom
	Address       isEventLocation_Address `protobuf_oneof:"address"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventLocation) Reset() {
	*x = EventLocation{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLocation) ProtoMessage() {}

func (x *EventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLocation.ProtoReflect.Descriptor instead.
func (*EventLocation) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{20}
}

func (x *EventLocation) GetVenueName() string {
	if x != nil {
		return x.VenueName
	}
	return ""
}

func (x *EventLocation) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *EventLocation) GetAddress() isEventLocation_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *EventLocation) GetGeo() *AddressGeo {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Geo); ok {
			return x.Geo
		}
	}
	return nil
}

func (x *EventLocation) GetVirtual() *AddressVirtual {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Virtual); ok {
			return x.Virtual
		}
	}
	return nil
}

func (x *EventLocation) GetCustom() *AddressCustom {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

type isEventLocation_Address interface {
	isEventLocation_Address()
}

type EventLocation_Geo struct {
	Geo *AddressGeo `protobuf:"bytes,3,opt,name=geo,proto3,oneof"`
}

type EventLocation_Virtual struct {
	Virtual *AddressVirtual `protobuf:"bytes,4,opt,name=virtual,proto3,oneof"`
}

type EventLocation_Custom struct {
	Custom *AddressCustom `protobuf:"bytes,5,opt,name=custom,proto3,oneof"`
}

func (*EventLocation_Geo) isEventLocation_Address() {}

func (*EventLocation_Virtual) isEventLocation_Address() {}

func (*EventLocation_Custom) isEventLocation_Address() {}

type AddressVirtual struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressVirtual) Reset() {
	*x = AddressVirtual{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressVirtual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressVirtual) ProtoMessage() {}

func (x *AddressVirtual) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressVirtual.ProtoReflect.Descriptor instead.
func (*AddressVirtual) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{21}
}

func (x *AddressVirtual) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type AddressGeo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Lat           float32                `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float32                `protobuf:"fixed32,3,opt,name=lng,proto3" json:"lng,omitempty"`
	Size          float32                `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressGeo) Reset() {
	*x = AddressGeo{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressGeo) ProtoMessage() {}

func (x *AddressGeo) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressGeo.ProtoReflect.Descriptor instead.
func (*AddressGeo) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{22}
}

func (x *AddressGeo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressGeo) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *AddressGeo) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *AddressGeo) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AddressCustom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Timezone      string                 `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"` // IANA name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressCustom) Reset() {
	*x = AddressCustom{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressCustom) ProtoMessage() {}

func (x *AddressCustom) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressCustom.ProtoReflect.Descriptor instead.
func (*AddressCustom) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{23}
}

func (x *AddressCustom) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressCustom) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type EventPrivacy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventPrivacy:
	//
	//	*EventPrivacy_Public
	//	*EventPrivacy_Guarded
	EventPrivacy  isEventPrivacy_EventPrivacy `protobuf_oneof:"event_privacy"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPrivacy) Reset() {
	*x = EventPrivacy{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPrivacy) ProtoMessage() {}

func (x *EventPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPrivacy.ProtoReflect.Descriptor instead.
func (*EventPrivacy) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{24}
}

func (x *EventPrivacy) GetEventPrivacy() isEventPrivacy_EventPrivacy {
	if x != nil {
		return x.EventPrivacy
	}
	return nil
}

func (x *EventPrivacy) GetPublic() *EventPrivacyPublic {
	if x != nil {
		if x, ok := x.EventPrivacy.(*EventPrivacy_Public); ok {
			return x.Public
		}
	}
	return nil
}

func (x *EventPrivacy) GetGuarded() *EventPrivacyGuarded {
	if x != nil {
		if x, ok := x.EventPrivacy.(*EventPrivacy_Guarded); ok {
			return x.Guarded
		}
	}
	return nil
}

type isEventPrivacy_EventPrivacy interface {
	isEventPrivacy_EventPrivacy()
}

type EventPrivacy_Public struct {
	Public *EventPrivacyPublic `protobuf:"bytes,1,opt,name=public,proto3,oneof"`
}

type EventPrivacy_Guarded struct {
	Guarded *EventPrivacyGuarded `protobuf:"bytes,2,opt,name=guarded,proto3,oneof"`
}

func (*EventPrivacy_Public) isEventPrivacy_EventPrivacy() {}

func (*EventPrivacy_Guarded) isEventPrivacy_EventPrivacy() {}

type EventPrivacyPublic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPrivacyPublic) Reset() {
	*x = EventPrivacyPublic{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPrivacyPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPrivacyPublic) ProtoMessage() {}

func (x *EventPrivacyPublic) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPrivacyPublic.ProtoReflect.Descriptor instead.
func (*EventPrivacyPublic) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{25}
}

type EventPrivacyGuarded struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ParticipationPubkey string                 `protobuf:"bytes,1,opt,name=participation_pubkey,json=participationPubkey,proto3" json:"participation_pubkey,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EventPrivacyGuarded) Reset() {
	*x = EventPrivacyGuarded{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPrivacyGuarded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPrivacyGuarded) ProtoMessage() {}

func (x *EventPrivacyGuarded) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPrivacyGuarded.ProtoReflect.Descriptor instead.
func (*EventPrivacyGuarded) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{26}
}

func (x *EventPrivacyGuarded) GetParticipationPubkey() string {
	if x != nil {
		return x.ParticipationPubkey
	}
	return ""
}

type EventInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUri      string                 `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	Organizers    []string               `protobuf:"bytes,4,rep,name=organizers,proto3" json:"organizers,omitempty"`
	Gatekeepers   []string               `protobuf:"bytes,5,rep,name=gatekeepers,proto3" json:"gatekeepers,omitempty"`
	StartDate     int64                  `protobuf:"varint,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // unix seconds
	EndDate       int64                  `protobuf:"varint,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // unix seconds
	Capacity      uint32                 `protobuf:"varint,8,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location      *EventLocation         `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	Participants  uint32                 `protobuf:"varint,10,opt,name=participants,proto3" json:"participants,omitempty"`
	PkgPath       string                 `protobuf:"bytes,11,opt,name=pkg_path,json=pkgPath,proto3" json:"pkg_path,omitempty"`
	Privacy       *EventPrivacy          `protobuf:"bytes,12,opt,name=privacy,proto3" json:"privacy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInfo) Reset() {
	*x = EventInfo{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfo) ProtoMessage() {}

func (x *EventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInfo.ProtoReflect.Descriptor instead.
func (*EventInfo) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{27}
}

func (x *EventInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventInfo) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *EventInfo) GetOrganizers() []string {
	if x != nil {
		return x.Organizers
	}
	return nil
}

func (x *EventInfo) GetGatekeepers() []string {
	if x != nil {
		return x.Gatekeepers
	}
	return nil
}

func (x *EventInfo) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *EventInfo) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *EventInfo) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *EventInfo) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EventInfo) GetParticipants() uint32 {
	if x != nil {
		return x.Participants
	}
	return 0
}

func (x *EventInfo) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

func (x *EventInfo) GetPrivacy() *EventPrivacy {
	if x != nil {
		return x.Privacy
	}
	return nil
}

type BatchProfileField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchProfileField) Reset() {
	*x = BatchProfileField{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchProfileField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProfileField) ProtoMessage() {}

func (x *BatchProfileField) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProfileField.ProtoReflect.Descriptor instead.
func (*BatchProfileField) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{28}
}

func (x *BatchProfileField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BatchProfileField) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BatchProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*BatchProfileField   `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Addresses     []string               `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchProfileRequest) Reset() {
	*x = BatchProfileRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProfileRequest) ProtoMessage() {}

func (x *BatchProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProfileRequest.ProtoReflect.Descriptor instead.
func (*BatchProfileRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{29}
}

func (x *BatchProfileRequest) GetFields() []*BatchProfileField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *BatchProfileRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type CreatePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Options       []string               `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Duration      int64                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"` // unix seconds
	Kind          v1.PollKind            `protobuf:"varint,5,opt,name=kind,proto3,enum=polls.v1.PollKind" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePollRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreatePollRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreatePollRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePollRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreatePollRequest) GetKind() v1.PollKind {
	if x != nil {
		return x.Kind
	}
	return v1.PollKind(0)
}

type CreatePollResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        string                 `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollResponse) Reset() {
	*x = CreatePollResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollResponse) ProtoMessage() {}

func (x *CreatePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollResponse.ProtoReflect.Descriptor instead.
func (*CreatePollResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{31}
}

func (x *CreatePollResponse) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type VotePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PollId        string                 `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	Option        string                 `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VotePollRequest) Reset() {
	*x = VotePollRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePollRequest) ProtoMessage() {}

func (x *VotePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePollRequest.ProtoReflect.Descriptor instead.
func (*VotePollRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{32}
}

func (x *VotePollRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

func (x *VotePollRequest) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

type VotePollResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VotePollResponse) Reset() {
	*x = VotePollResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePollResponse) ProtoMessage() {}

func (x *VotePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePollResponse.ProtoReflect.Descriptor instead.
func (*VotePollResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{33}
}

type CreatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ParentId      string                 `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{34}
}

func (x *CreatePostRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreatePostRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreatePostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        string                 `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{35}
}

func (x *CreatePostResponse) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type ReactPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        string                 `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Icon          string                 `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactPostRequest) Reset() {
	*x = ReactPostRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactPostRequest) ProtoMessage() {}

func (x *ReactPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactPostRequest.ProtoReflect.Descriptor instead.
func (*ReactPostRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{36}
}

func (x *ReactPostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *ReactPostRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type ReactPostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactPostResponse) Reset() {
	*x = ReactPostResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactPostResponse) ProtoMessage() {}

func (x *ReactPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactPostResponse.ProtoReflect.Descriptor instead.
func (*ReactPostResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{37}
}

type GetEventTicketsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTicketsRequest) Reset() {
	*x = GetEventTicketsRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTicketsRequest) ProtoMessage() {}

func (x *GetEventTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetEventTicketsRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{38}
}

func (x *GetEventTicketsRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetEventTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketsInfo   []*TicketInfo          `protobuf:"bytes,1,rep,name=tickets_info,json=ticketsInfo,proto3" json:"tickets_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventTicketsResponse) Reset() {
	*x = GetEventTicketsResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventTicketsResponse) ProtoMessage() {}

func (x *GetEventTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventTicketsResponse.ProtoReflect.Descriptor instead.
func (*GetEventTicketsResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{39}
}

func (x *GetEventTicketsResponse) GetTicketsInfo() []*TicketInfo {
	if x != nil {
		return x.TicketsInfo
	}
	return nil
}

type TicketInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSecret  string                 `protobuf:"bytes,1,opt,name=ticket_secret,json=ticketSecret,proto3" json:"ticket_secret,omitempty"`
	UserEmail     string                 `protobuf:"bytes,2,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketInfo) Reset() {
	*x = TicketInfo{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketInfo) ProtoMessage() {}

func (x *TicketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketInfo.ProtoReflect.Descriptor instead.
func (*TicketInfo) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{40}
}

func (x *TicketInfo) GetTicketSecret() string {
	if x != nil {
		return x.TicketSecret
	}
	return ""
}

func (x *TicketInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type CheckinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketPubkey  string                 `protobuf:"bytes,1,opt,name=ticket_pubkey,json=ticketPubkey,proto3" json:"ticket_pubkey,omitempty"`
	Signature     string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckinRequest) Reset() {
	*x = CheckinRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest) ProtoMessage() {}

func (x *CheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest.ProtoReflect.Descriptor instead.
func (*CheckinRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{41}
}

func (x *CheckinRequest) GetTicketPubkey() string {
	if x != nil {
		return x.TicketPubkey
	}
	return ""
}

func (x *CheckinRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type CheckinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckinResponse) Reset() {
	*x = CheckinResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinResponse) ProtoMessage() {}

func (x *CheckinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinResponse.ProtoReflect.Descriptor instead.
func (*CheckinResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{42}
}

var File_zenao_v1_zenao_proto protoreflect.FileDescriptor

var file_zenao_v1_zenao_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x14, 0x70, 0x6f, 0x6c, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x6c, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x65, 0x0a, 0x0f, 0x45,
	0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x62, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x69, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e,
	0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x74,
	0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb7, 0x03, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61,
	0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x11,
	0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x74,
	0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x17, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a,
	0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22,
	0x79, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x1a, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3a, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x71,
	0x0a, 0x15, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x22, 0x18, 0x0a, 0x16, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x28, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x12, 0x31, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x22,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x22, 0x5e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x6e,
	0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x00, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x39, 0x0a, 0x07, 0x67, 0x75, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x47, 0x75, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x67, 0x75, 0x61, 0x72, 0x64, 0x65, 0x64, 0x42, 0x0f, 0x0a,
	0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0x14,
	0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x22, 0x48, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x47, 0x75, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x9e,
	0x03, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x72,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6b, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22,
	0x39, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x68, 0x0a, 0x13, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a,
	0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x50, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x53, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xec, 0x09, 0x0a, 0x0c, 0x5a, 0x65,
	0x6e, 0x61, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x45, 0x64,
	0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x7a,
	0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x1b,
	0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x7a, 0x65, 0x6e,
	0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x72, 0x61, 0x69, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x7a, 0x65, 0x6e, 0x61,
	0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_zenao_v1_zenao_proto_rawDescOnce sync.Once
	file_zenao_v1_zenao_proto_rawDescData []byte
)

func file_zenao_v1_zenao_proto_rawDescGZIP() []byte {
	file_zenao_v1_zenao_proto_rawDescOnce.Do(func() {
		file_zenao_v1_zenao_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_zenao_v1_zenao_proto_rawDesc), len(file_zenao_v1_zenao_proto_rawDesc)))
	})
	return file_zenao_v1_zenao_proto_rawDescData
}

var file_zenao_v1_zenao_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_zenao_v1_zenao_proto_goTypes = []any{
	(*HealthRequest)(nil),               // 0: zenao.v1.HealthRequest
	(*HealthResponse)(nil),              // 1: zenao.v1.HealthResponse
	(*EditUserRequest)(nil),             // 2: zenao.v1.EditUserRequest
	(*EditUserResponse)(nil),            // 3: zenao.v1.EditUserResponse
	(*GetUserAddressRequest)(nil),       // 4: zenao.v1.GetUserAddressRequest
	(*GetUserAddressResponse)(nil),      // 5: zenao.v1.GetUserAddressResponse
	(*CreateEventRequest)(nil),          // 6: zenao.v1.CreateEventRequest
	(*CreateEventResponse)(nil),         // 7: zenao.v1.CreateEventResponse
	(*EditEventRequest)(nil),            // 8: zenao.v1.EditEventRequest
	(*EditEventResponse)(nil),           // 9: zenao.v1.EditEventResponse
	(*GetEventGatekeepersRequest)(nil),  // 10: zenao.v1.GetEventGatekeepersRequest
	(*GetEventGatekeepersResponse)(nil), // 11: zenao.v1.GetEventGatekeepersResponse
	(*ValidatePasswordRequest)(nil),     // 12: zenao.v1.ValidatePasswordRequest
	(*ValidatePasswordResponse)(nil),    // 13: zenao.v1.ValidatePasswordResponse
	(*ParticipateRequest)(nil),          // 14: zenao.v1.ParticipateRequest
	(*CancelParticipationRequest)(nil),  // 15: zenao.v1.CancelParticipationRequest
	(*CancelParticipationResponse)(nil), // 16: zenao.v1.CancelParticipationResponse
	(*ParticipateResponse)(nil),         // 17: zenao.v1.ParticipateResponse
	(*BroadcastEventRequest)(nil),       // 18: zenao.v1.BroadcastEventRequest
	(*BroadcastEventResponse)(nil),      // 19: zenao.v1.BroadcastEventResponse
	(*EventLocation)(nil),               // 20: zenao.v1.EventLocation
	(*AddressVirtual)(nil),              // 21: zenao.v1.AddressVirtual
	(*AddressGeo)(nil),                  // 22: zenao.v1.AddressGeo
	(*AddressCustom)(nil),               // 23: zenao.v1.AddressCustom
	(*EventPrivacy)(nil),                // 24: zenao.v1.EventPrivacy
	(*EventPrivacyPublic)(nil),          // 25: zenao.v1.EventPrivacyPublic
	(*EventPrivacyGuarded)(nil),         // 26: zenao.v1.EventPrivacyGuarded
	(*EventInfo)(nil),                   // 27: zenao.v1.EventInfo
	(*BatchProfileField)(nil),           // 28: zenao.v1.BatchProfileField
	(*BatchProfileRequest)(nil),         // 29: zenao.v1.BatchProfileRequest
	(*CreatePollRequest)(nil),           // 30: zenao.v1.CreatePollRequest
	(*CreatePollResponse)(nil),          // 31: zenao.v1.CreatePollResponse
	(*VotePollRequest)(nil),             // 32: zenao.v1.VotePollRequest
	(*VotePollResponse)(nil),            // 33: zenao.v1.VotePollResponse
	(*CreatePostRequest)(nil),           // 34: zenao.v1.CreatePostRequest
	(*CreatePostResponse)(nil),          // 35: zenao.v1.CreatePostResponse
	(*ReactPostRequest)(nil),            // 36: zenao.v1.ReactPostRequest
	(*ReactPostResponse)(nil),           // 37: zenao.v1.ReactPostResponse
	(*GetEventTicketsRequest)(nil),      // 38: zenao.v1.GetEventTicketsRequest
	(*GetEventTicketsResponse)(nil),     // 39: zenao.v1.GetEventTicketsResponse
	(*TicketInfo)(nil),                  // 40: zenao.v1.TicketInfo
	(*CheckinRequest)(nil),              // 41: zenao.v1.CheckinRequest
	(*CheckinResponse)(nil),             // 42: zenao.v1.CheckinResponse
	(v1.PollKind)(0),                    // 43: polls.v1.PollKind
}
var file_zenao_v1_zenao_proto_depIdxs = []int32{
	20, // 0: zenao.v1.CreateEventRequest.location:type_name -> zenao.v1.EventLocation
	20, // 1: zenao.v1.EditEventRequest.location:type_name -> zenao.v1.EventLocation
	22, // 2: zenao.v1.EventLocation.geo:type_name -> zenao.v1.AddressGeo
	21, // 3: zenao.v1.EventLocation.virtual:type_name -> zenao.v1.AddressVirtual
	23, // 4: zenao.v1.EventLocation.custom:type_name -> zenao.v1.AddressCustom
	25, // 5: zenao.v1.EventPrivacy.public:type_name -> zenao.v1.EventPrivacyPublic
	26, // 6: zenao.v1.EventPrivacy.guarded:type_name -> zenao.v1.EventPrivacyGuarded
	20, // 7: zenao.v1.EventInfo.location:type_name -> zenao.v1.EventLocation
	24, // 8: zenao.v1.EventInfo.privacy:type_name -> zenao.v1.EventPrivacy
	28, // 9: zenao.v1.BatchProfileRequest.fields:type_name -> zenao.v1.BatchProfileField
	43, // 10: zenao.v1.CreatePollRequest.kind:type_name -> polls.v1.PollKind
	40, // 11: zenao.v1.GetEventTicketsResponse.tickets_info:type_name -> zenao.v1.TicketInfo
	2,  // 12: zenao.v1.ZenaoService.EditUser:input_type -> zenao.v1.EditUserRequest
	4,  // 13: zenao.v1.ZenaoService.GetUserAddress:input_type -> zenao.v1.GetUserAddressRequest
	6,  // 14: zenao.v1.ZenaoService.CreateEvent:input_type -> zenao.v1.CreateEventRequest
	8,  // 15: zenao.v1.ZenaoService.EditEvent:input_type -> zenao.v1.EditEventRequest
	10, // 16: zenao.v1.ZenaoService.GetEventGatekeepers:input_type -> zenao.v1.GetEventGatekeepersRequest
	12, // 17: zenao.v1.ZenaoService.ValidatePassword:input_type -> zenao.v1.ValidatePasswordRequest
	18, // 18: zenao.v1.ZenaoService.BroadcastEvent:input_type -> zenao.v1.BroadcastEventRequest
	14, // 19: zenao.v1.ZenaoService.Participate:input_type -> zenao.v1.ParticipateRequest
	15, // 20: zenao.v1.ZenaoService.CancelParticipation:input_type -> zenao.v1.CancelParticipationRequest
	38, // 21: zenao.v1.ZenaoService.GetEventTickets:input_type -> zenao.v1.GetEventTicketsRequest
	41, // 22: zenao.v1.ZenaoService.Checkin:input_type -> zenao.v1.CheckinRequest
	30, // 23: zenao.v1.ZenaoService.CreatePoll:input_type -> zenao.v1.CreatePollRequest
	32, // 24: zenao.v1.ZenaoService.VotePoll:input_type -> zenao.v1.VotePollRequest
	34, // 25: zenao.v1.ZenaoService.CreatePost:input_type -> zenao.v1.CreatePostRequest
	36, // 26: zenao.v1.ZenaoService.ReactPost:input_type -> zenao.v1.ReactPostRequest
	0,  // 27: zenao.v1.ZenaoService.Health:input_type -> zenao.v1.HealthRequest
	3,  // 28: zenao.v1.ZenaoService.EditUser:output_type -> zenao.v1.EditUserResponse
	5,  // 29: zenao.v1.ZenaoService.GetUserAddress:output_type -> zenao.v1.GetUserAddressResponse
	7,  // 30: zenao.v1.ZenaoService.CreateEvent:output_type -> zenao.v1.CreateEventResponse
	9,  // 31: zenao.v1.ZenaoService.EditEvent:output_type -> zenao.v1.EditEventResponse
	11, // 32: zenao.v1.ZenaoService.GetEventGatekeepers:output_type -> zenao.v1.GetEventGatekeepersResponse
	13, // 33: zenao.v1.ZenaoService.ValidatePassword:output_type -> zenao.v1.ValidatePasswordResponse
	19, // 34: zenao.v1.ZenaoService.BroadcastEvent:output_type -> zenao.v1.BroadcastEventResponse
	17, // 35: zenao.v1.ZenaoService.Participate:output_type -> zenao.v1.ParticipateResponse
	16, // 36: zenao.v1.ZenaoService.CancelParticipation:output_type -> zenao.v1.CancelParticipationResponse
	39, // 37: zenao.v1.ZenaoService.GetEventTickets:output_type -> zenao.v1.GetEventTicketsResponse
	42, // 38: zenao.v1.ZenaoService.Checkin:output_type -> zenao.v1.CheckinResponse
	31, // 39: zenao.v1.ZenaoService.CreatePoll:output_type -> zenao.v1.CreatePollResponse
	33, // 40: zenao.v1.ZenaoService.VotePoll:output_type -> zenao.v1.VotePollResponse
	35, // 41: zenao.v1.ZenaoService.CreatePost:output_type -> zenao.v1.CreatePostResponse
	37, // 42: zenao.v1.ZenaoService.ReactPost:output_type -> zenao.v1.ReactPostResponse
	1,  // 43: zenao.v1.ZenaoService.Health:output_type -> zenao.v1.HealthResponse
	28, // [28:44] is the sub-list for method output_type
	12, // [12:28] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_zenao_v1_zenao_proto_init() }
func file_zenao_v1_zenao_proto_init() {
	if File_zenao_v1_zenao_proto != nil {
		return
	}
	file_zenao_v1_zenao_proto_msgTypes[20].OneofWrappers = []any{
		(*EventLocation_Geo)(nil),
		(*EventLocation_Virtual)(nil),
		(*EventLocation_Custom)(nil),
	}
	file_zenao_v1_zenao_proto_msgTypes[24].OneofWrappers = []any{
		(*EventPrivacy_Public)(nil),
		(*EventPrivacy_Guarded)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_zenao_v1_zenao_proto_rawDesc), len(file_zenao_v1_zenao_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zenao_v1_zenao_proto_goTypes,
		DependencyIndexes: file_zenao_v1_zenao_proto_depIdxs,
		MessageInfos:      file_zenao_v1_zenao_proto_msgTypes,
	}.Build()
	File_zenao_v1_zenao_proto = out.File
	file_zenao_v1_zenao_proto_goTypes = nil
	file_zenao_v1_zenao_proto_depIdxs = nil
}
