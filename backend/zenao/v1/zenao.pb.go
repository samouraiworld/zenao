// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: zenao/v1/zenao.proto

package zenaov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EditUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DisplayName   string                 `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Bio           string                 `protobuf:"bytes,2,opt,name=bio,proto3" json:"bio,omitempty"`
	AvatarUri     string                 `protobuf:"bytes,3,opt,name=avatar_uri,json=avatarUri,proto3" json:"avatar_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditUserRequest) Reset() {
	*x = EditUserRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserRequest) ProtoMessage() {}

func (x *EditUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserRequest.ProtoReflect.Descriptor instead.
func (*EditUserRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{0}
}

func (x *EditUserRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EditUserRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *EditUserRequest) GetAvatarUri() string {
	if x != nil {
		return x.AvatarUri
	}
	return ""
}

type EditUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditUserResponse) Reset() {
	*x = EditUserResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditUserResponse) ProtoMessage() {}

func (x *EditUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditUserResponse.ProtoReflect.Descriptor instead.
func (*EditUserResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{1}
}

func (x *EditUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAddressRequest) Reset() {
	*x = GetUserAddressRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressRequest) ProtoMessage() {}

func (x *GetUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressRequest.ProtoReflect.Descriptor instead.
func (*GetUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{2}
}

type GetUserAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAddressResponse) Reset() {
	*x = GetUserAddressResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressResponse) ProtoMessage() {}

func (x *GetUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressResponse.ProtoReflect.Descriptor instead.
func (*GetUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // markdown
	ImageUri      string                 `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	StartDate     uint64                 `protobuf:"varint,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`        // unix seconds
	EndDate       uint64                 `protobuf:"varint,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`              // unix seconds
	TicketPrice   float64                `protobuf:"fixed64,6,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"` // XXX: use fixed point?
	Capacity      uint32                 `protobuf:"varint,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location      *EventLocation         `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEventRequest) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *CreateEventRequest) GetStartDate() uint64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *CreateEventRequest) GetEndDate() uint64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *CreateEventRequest) GetTicketPrice() float64 {
	if x != nil {
		return x.TicketPrice
	}
	return 0
}

func (x *CreateEventRequest) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreateEventRequest) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{5}
}

func (x *CreateEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // markdown
	ImageUri      string                 `protobuf:"bytes,4,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	StartDate     uint64                 `protobuf:"varint,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`        // unix seconds
	EndDate       uint64                 `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`              // unix seconds
	TicketPrice   float64                `protobuf:"fixed64,7,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"` // XXX: use fixed point?
	Capacity      uint32                 `protobuf:"varint,8,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location      *EventLocation         `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditEventRequest) Reset() {
	*x = EditEventRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventRequest) ProtoMessage() {}

func (x *EditEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventRequest.ProtoReflect.Descriptor instead.
func (*EditEventRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{6}
}

func (x *EditEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EditEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditEventRequest) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *EditEventRequest) GetStartDate() uint64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *EditEventRequest) GetEndDate() uint64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *EditEventRequest) GetTicketPrice() float64 {
	if x != nil {
		return x.TicketPrice
	}
	return 0
}

func (x *EditEventRequest) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *EditEventRequest) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type EditEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditEventResponse) Reset() {
	*x = EditEventResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventResponse) ProtoMessage() {}

func (x *EditEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventResponse.ProtoReflect.Descriptor instead.
func (*EditEventResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{7}
}

func (x *EditEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ParticipateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateRequest) Reset() {
	*x = ParticipateRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateRequest) ProtoMessage() {}

func (x *ParticipateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateRequest.ProtoReflect.Descriptor instead.
func (*ParticipateRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{8}
}

func (x *ParticipateRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ParticipateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ParticipateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketSecret  string                 `protobuf:"bytes,1,opt,name=ticket_secret,json=ticketSecret,proto3" json:"ticket_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateResponse) Reset() {
	*x = ParticipateResponse{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateResponse) ProtoMessage() {}

func (x *ParticipateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateResponse.ProtoReflect.Descriptor instead.
func (*ParticipateResponse) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{9}
}

func (x *ParticipateResponse) GetTicketSecret() string {
	if x != nil {
		return x.TicketSecret
	}
	return ""
}

type EventLocation struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	VenueName    string                 `protobuf:"bytes,1,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty"`
	Instructions string                 `protobuf:"bytes,2,opt,name=instructions,proto3" json:"instructions,omitempty"` // markdown
	// Types that are valid to be assigned to Address:
	//
	//	*EventLocation_Geo
	//	*EventLocation_Virtual
	//	*EventLocation_Custom
	Address       isEventLocation_Address `protobuf_oneof:"address"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventLocation) Reset() {
	*x = EventLocation{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLocation) ProtoMessage() {}

func (x *EventLocation) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLocation.ProtoReflect.Descriptor instead.
func (*EventLocation) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{10}
}

func (x *EventLocation) GetVenueName() string {
	if x != nil {
		return x.VenueName
	}
	return ""
}

func (x *EventLocation) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *EventLocation) GetAddress() isEventLocation_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *EventLocation) GetGeo() *AddressGeo {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Geo); ok {
			return x.Geo
		}
	}
	return nil
}

func (x *EventLocation) GetVirtual() *AddressVirtual {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Virtual); ok {
			return x.Virtual
		}
	}
	return nil
}

func (x *EventLocation) GetCustom() *AddressCustom {
	if x != nil {
		if x, ok := x.Address.(*EventLocation_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

type isEventLocation_Address interface {
	isEventLocation_Address()
}

type EventLocation_Geo struct {
	Geo *AddressGeo `protobuf:"bytes,3,opt,name=geo,proto3,oneof"`
}

type EventLocation_Virtual struct {
	Virtual *AddressVirtual `protobuf:"bytes,4,opt,name=virtual,proto3,oneof"`
}

type EventLocation_Custom struct {
	Custom *AddressCustom `protobuf:"bytes,5,opt,name=custom,proto3,oneof"`
}

func (*EventLocation_Geo) isEventLocation_Address() {}

func (*EventLocation_Virtual) isEventLocation_Address() {}

func (*EventLocation_Custom) isEventLocation_Address() {}

type AddressVirtual struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressVirtual) Reset() {
	*x = AddressVirtual{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressVirtual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressVirtual) ProtoMessage() {}

func (x *AddressVirtual) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressVirtual.ProtoReflect.Descriptor instead.
func (*AddressVirtual) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{11}
}

func (x *AddressVirtual) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type AddressGeo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Lat           float32                `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float32                `protobuf:"fixed32,3,opt,name=lng,proto3" json:"lng,omitempty"`
	Size          float32                `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressGeo) Reset() {
	*x = AddressGeo{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressGeo) ProtoMessage() {}

func (x *AddressGeo) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressGeo.ProtoReflect.Descriptor instead.
func (*AddressGeo) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{12}
}

func (x *AddressGeo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressGeo) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *AddressGeo) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *AddressGeo) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AddressCustom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Timezone      string                 `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"` // IANA name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressCustom) Reset() {
	*x = AddressCustom{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressCustom) ProtoMessage() {}

func (x *AddressCustom) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressCustom.ProtoReflect.Descriptor instead.
func (*AddressCustom) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{13}
}

func (x *AddressCustom) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressCustom) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type EventInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUri      string                 `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	Creator       string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	StartDate     int64                  `protobuf:"varint,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // unix seconds
	EndDate       int64                  `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // unix seconds
	Capacity      uint32                 `protobuf:"varint,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Location      *EventLocation         `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	Participants  uint32                 `protobuf:"varint,9,opt,name=participants,proto3" json:"participants,omitempty"`
	PkgPath       string                 `protobuf:"bytes,10,opt,name=pkg_path,json=pkgPath,proto3" json:"pkg_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventInfo) Reset() {
	*x = EventInfo{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfo) ProtoMessage() {}

func (x *EventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInfo.ProtoReflect.Descriptor instead.
func (*EventInfo) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{14}
}

func (x *EventInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventInfo) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *EventInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *EventInfo) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *EventInfo) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *EventInfo) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *EventInfo) GetLocation() *EventLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EventInfo) GetParticipants() uint32 {
	if x != nil {
		return x.Participants
	}
	return 0
}

func (x *EventInfo) GetPkgPath() string {
	if x != nil {
		return x.PkgPath
	}
	return ""
}

type BatchProfileField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchProfileField) Reset() {
	*x = BatchProfileField{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchProfileField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProfileField) ProtoMessage() {}

func (x *BatchProfileField) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProfileField.ProtoReflect.Descriptor instead.
func (*BatchProfileField) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{15}
}

func (x *BatchProfileField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BatchProfileField) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BatchProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*BatchProfileField   `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Addresses     []string               `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchProfileRequest) Reset() {
	*x = BatchProfileRequest{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProfileRequest) ProtoMessage() {}

func (x *BatchProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProfileRequest.ProtoReflect.Descriptor instead.
func (*BatchProfileRequest) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{16}
}

func (x *BatchProfileRequest) GetFields() []*BatchProfileField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *BatchProfileRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type PostGeoLoc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lat           float32                `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng           float32                `protobuf:"fixed32,3,opt,name=lng,proto3" json:"lng,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostGeoLoc) Reset() {
	*x = PostGeoLoc{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostGeoLoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostGeoLoc) ProtoMessage() {}

func (x *PostGeoLoc) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostGeoLoc.ProtoReflect.Descriptor instead.
func (*PostGeoLoc) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{17}
}

func (x *PostGeoLoc) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *PostGeoLoc) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type PostID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocalId       string                 `protobuf:"bytes,1,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"` // indexed by feed_id e.g "feed_id:local_post_id"
	FeedId        string                 `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`    // mainly a contract of social feed factory
	NetworkId     string                 `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostID) Reset() {
	*x = PostID{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostID) ProtoMessage() {}

func (x *PostID) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostID.ProtoReflect.Descriptor instead.
func (*PostID) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{18}
}

func (x *PostID) GetLocalId() string {
	if x != nil {
		return x.LocalId
	}
	return ""
}

func (x *PostID) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *PostID) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

// XXX: put this in Post directly?
type PostCommon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Author        string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	ParentId      *PostID                `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Loc           *PostGeoLoc            `protobuf:"bytes,4,opt,name=loc,proto3" json:"loc,omitempty"` // XXX: map any extentions = 10;
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     int64                  `protobuf:"varint,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` // if != 0 -> deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostCommon) Reset() {
	*x = PostCommon{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommon) ProtoMessage() {}

func (x *PostCommon) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommon.ProtoReflect.Descriptor instead.
func (*PostCommon) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{19}
}

func (x *PostCommon) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PostCommon) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PostCommon) GetParentId() *PostID {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *PostCommon) GetLoc() *PostGeoLoc {
	if x != nil {
		return x.Loc
	}
	return nil
}

func (x *PostCommon) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PostCommon) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PostCommon) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type StandardPost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *PostCommon            `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StandardPost) Reset() {
	*x = StandardPost{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StandardPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardPost) ProtoMessage() {}

func (x *StandardPost) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardPost.ProtoReflect.Descriptor instead.
func (*StandardPost) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{20}
}

func (x *StandardPost) GetCommon() *PostCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *StandardPost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ArticlePost struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Common          *PostCommon            `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PreviewText     string                 `protobuf:"bytes,3,opt,name=preview_text,json=previewText,proto3" json:"preview_text,omitempty"`
	PreviewImageUri string                 `protobuf:"bytes,4,opt,name=preview_image_uri,json=previewImageUri,proto3" json:"preview_image_uri,omitempty"`
	Content         string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ArticlePost) Reset() {
	*x = ArticlePost{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticlePost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlePost) ProtoMessage() {}

func (x *ArticlePost) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlePost.ProtoReflect.Descriptor instead.
func (*ArticlePost) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{21}
}

func (x *ArticlePost) GetCommon() *PostCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ArticlePost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticlePost) GetPreviewText() string {
	if x != nil {
		return x.PreviewText
	}
	return ""
}

func (x *ArticlePost) GetPreviewImageUri() string {
	if x != nil {
		return x.PreviewImageUri
	}
	return ""
}

func (x *ArticlePost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type LinkPost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *PostCommon            `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Uri           string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	EntityId      string                 `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"` // useful to interact with factory interfaces
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkPost) Reset() {
	*x = LinkPost{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkPost) ProtoMessage() {}

func (x *LinkPost) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkPost.ProtoReflect.Descriptor instead.
func (*LinkPost) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{22}
}

func (x *LinkPost) GetCommon() *PostCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *LinkPost) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *LinkPost) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type ImagePost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *PostCommon            `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUri      string                 `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePost) Reset() {
	*x = ImagePost{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePost) ProtoMessage() {}

func (x *ImagePost) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePost.ProtoReflect.Descriptor instead.
func (*ImagePost) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{23}
}

func (x *ImagePost) GetCommon() *PostCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ImagePost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ImagePost) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

type VideoPost struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Common            *PostCommon            `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Description       string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	VideoUri          string                 `protobuf:"bytes,3,opt,name=video_uri,json=videoUri,proto3" json:"video_uri,omitempty"`
	ThumbnailImageUri string                 `protobuf:"bytes,4,opt,name=thumbnail_image_uri,json=thumbnailImageUri,proto3" json:"thumbnail_image_uri,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *VideoPost) Reset() {
	*x = VideoPost{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPost) ProtoMessage() {}

func (x *VideoPost) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPost.ProtoReflect.Descriptor instead.
func (*VideoPost) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{24}
}

func (x *VideoPost) GetCommon() *PostCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *VideoPost) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoPost) GetVideoUri() string {
	if x != nil {
		return x.VideoUri
	}
	return ""
}

func (x *VideoPost) GetThumbnailImageUri() string {
	if x != nil {
		return x.ThumbnailImageUri
	}
	return ""
}

type Reaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        *PostID                `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Icon          string                 `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{25}
}

func (x *Reaction) GetPostId() *PostID {
	if x != nil {
		return x.PostId
	}
	return nil
}

func (x *Reaction) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Reaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Only on local chaine from the related post
type Tip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostLocalId   string                 `protobuf:"bytes,1,opt,name=post_local_id,json=postLocalId,proto3" json:"post_local_id,omitempty"`
	Denom         string                 `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount        int64                  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"` // XXX: use string encoding?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tip) Reset() {
	*x = Tip{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tip) ProtoMessage() {}

func (x *Tip) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tip.ProtoReflect.Descriptor instead.
func (*Tip) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{26}
}

func (x *Tip) GetPostLocalId() string {
	if x != nil {
		return x.PostLocalId
	}
	return ""
}

func (x *Tip) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Tip) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Post struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Post:
	//
	//	*Post_Standard
	//	*Post_Article
	//	*Post_Link
	//	*Post_Image
	//	*Post_Video
	Post          isPost_Post `protobuf_oneof:"post"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{27}
}

func (x *Post) GetPost() isPost_Post {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *Post) GetStandard() *StandardPost {
	if x != nil {
		if x, ok := x.Post.(*Post_Standard); ok {
			return x.Standard
		}
	}
	return nil
}

func (x *Post) GetArticle() *ArticlePost {
	if x != nil {
		if x, ok := x.Post.(*Post_Article); ok {
			return x.Article
		}
	}
	return nil
}

func (x *Post) GetLink() *LinkPost {
	if x != nil {
		if x, ok := x.Post.(*Post_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Post) GetImage() *ImagePost {
	if x != nil {
		if x, ok := x.Post.(*Post_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *Post) GetVideo() *VideoPost {
	if x != nil {
		if x, ok := x.Post.(*Post_Video); ok {
			return x.Video
		}
	}
	return nil
}

type isPost_Post interface {
	isPost_Post()
}

type Post_Standard struct {
	Standard *StandardPost `protobuf:"bytes,1,opt,name=standard,proto3,oneof"`
}

type Post_Article struct {
	Article *ArticlePost `protobuf:"bytes,2,opt,name=article,proto3,oneof"`
}

type Post_Link struct {
	Link *LinkPost `protobuf:"bytes,3,opt,name=link,proto3,oneof"`
}

type Post_Image struct {
	Image *ImagePost `protobuf:"bytes,4,opt,name=image,proto3,oneof"`
}

type Post_Video struct {
	Video *VideoPost `protobuf:"bytes,5,opt,name=video,proto3,oneof"`
}

func (*Post_Standard) isPost_Post() {}

func (*Post_Article) isPost_Post() {}

func (*Post_Link) isPost_Post() {}

func (*Post_Image) isPost_Post() {}

func (*Post_Video) isPost_Post() {}

// contains the authorization layer, each DAO has its own feed but could have
// multiple feeds
type SocialFeed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SocialFeed) Reset() {
	*x = SocialFeed{}
	mi := &file_zenao_v1_zenao_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocialFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialFeed) ProtoMessage() {}

func (x *SocialFeed) ProtoReflect() protoreflect.Message {
	mi := &file_zenao_v1_zenao_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialFeed.ProtoReflect.Descriptor instead.
func (*SocialFeed) Descriptor() ([]byte, []int) {
	return file_zenao_v1_zenao_proto_rawDescGZIP(), []int{28}
}

func (x *SocialFeed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_zenao_v1_zenao_proto protoreflect.FileDescriptor

var file_zenao_v1_zenao_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x22, 0x65, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x69, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x45, 0x64,
	0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x11,
	0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x45, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x67, 0x65, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x03,
	0x67, 0x65, 0x6f, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x07, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x22, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x5e, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x47, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6b, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6b, 0x67, 0x50, 0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x11, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x68, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x30,
	0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67,
	0x22, 0x5b, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xf7, 0x01,
	0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x03, 0x6c, 0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x47,
	0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x52, 0x03, 0x6c, 0x6f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0xba, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x08,
	0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x22,
	0xa8, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x69, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x22, 0x62, 0x0a, 0x08, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57,
	0x0a, 0x03, 0x54, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x06, 0x0a,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x32, 0x84, 0x03, 0x0a, 0x0c, 0x5a, 0x65, 0x6e, 0x61, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x19, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x7a, 0x65, 0x6e, 0x61,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x7a, 0x65, 0x6e,
	0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x7a, 0x65, 0x6e, 0x61,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x45, 0x64, 0x69, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6d, 0x6f, 0x75, 0x72, 0x61,
	0x69, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x7a, 0x65, 0x6e, 0x61, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x7a, 0x65,
	0x6e, 0x61, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_zenao_v1_zenao_proto_rawDescOnce sync.Once
	file_zenao_v1_zenao_proto_rawDescData []byte
)

func file_zenao_v1_zenao_proto_rawDescGZIP() []byte {
	file_zenao_v1_zenao_proto_rawDescOnce.Do(func() {
		file_zenao_v1_zenao_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_zenao_v1_zenao_proto_rawDesc), len(file_zenao_v1_zenao_proto_rawDesc)))
	})
	return file_zenao_v1_zenao_proto_rawDescData
}

var file_zenao_v1_zenao_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_zenao_v1_zenao_proto_goTypes = []any{
	(*EditUserRequest)(nil),        // 0: zenao.v1.EditUserRequest
	(*EditUserResponse)(nil),       // 1: zenao.v1.EditUserResponse
	(*GetUserAddressRequest)(nil),  // 2: zenao.v1.GetUserAddressRequest
	(*GetUserAddressResponse)(nil), // 3: zenao.v1.GetUserAddressResponse
	(*CreateEventRequest)(nil),     // 4: zenao.v1.CreateEventRequest
	(*CreateEventResponse)(nil),    // 5: zenao.v1.CreateEventResponse
	(*EditEventRequest)(nil),       // 6: zenao.v1.EditEventRequest
	(*EditEventResponse)(nil),      // 7: zenao.v1.EditEventResponse
	(*ParticipateRequest)(nil),     // 8: zenao.v1.ParticipateRequest
	(*ParticipateResponse)(nil),    // 9: zenao.v1.ParticipateResponse
	(*EventLocation)(nil),          // 10: zenao.v1.EventLocation
	(*AddressVirtual)(nil),         // 11: zenao.v1.AddressVirtual
	(*AddressGeo)(nil),             // 12: zenao.v1.AddressGeo
	(*AddressCustom)(nil),          // 13: zenao.v1.AddressCustom
	(*EventInfo)(nil),              // 14: zenao.v1.EventInfo
	(*BatchProfileField)(nil),      // 15: zenao.v1.BatchProfileField
	(*BatchProfileRequest)(nil),    // 16: zenao.v1.BatchProfileRequest
	(*PostGeoLoc)(nil),             // 17: zenao.v1.PostGeoLoc
	(*PostID)(nil),                 // 18: zenao.v1.PostID
	(*PostCommon)(nil),             // 19: zenao.v1.PostCommon
	(*StandardPost)(nil),           // 20: zenao.v1.StandardPost
	(*ArticlePost)(nil),            // 21: zenao.v1.ArticlePost
	(*LinkPost)(nil),               // 22: zenao.v1.LinkPost
	(*ImagePost)(nil),              // 23: zenao.v1.ImagePost
	(*VideoPost)(nil),              // 24: zenao.v1.VideoPost
	(*Reaction)(nil),               // 25: zenao.v1.Reaction
	(*Tip)(nil),                    // 26: zenao.v1.Tip
	(*Post)(nil),                   // 27: zenao.v1.Post
	(*SocialFeed)(nil),             // 28: zenao.v1.SocialFeed
}
var file_zenao_v1_zenao_proto_depIdxs = []int32{
	10, // 0: zenao.v1.CreateEventRequest.location:type_name -> zenao.v1.EventLocation
	10, // 1: zenao.v1.EditEventRequest.location:type_name -> zenao.v1.EventLocation
	12, // 2: zenao.v1.EventLocation.geo:type_name -> zenao.v1.AddressGeo
	11, // 3: zenao.v1.EventLocation.virtual:type_name -> zenao.v1.AddressVirtual
	13, // 4: zenao.v1.EventLocation.custom:type_name -> zenao.v1.AddressCustom
	10, // 5: zenao.v1.EventInfo.location:type_name -> zenao.v1.EventLocation
	15, // 6: zenao.v1.BatchProfileRequest.fields:type_name -> zenao.v1.BatchProfileField
	18, // 7: zenao.v1.PostCommon.parent_id:type_name -> zenao.v1.PostID
	17, // 8: zenao.v1.PostCommon.loc:type_name -> zenao.v1.PostGeoLoc
	19, // 9: zenao.v1.StandardPost.common:type_name -> zenao.v1.PostCommon
	19, // 10: zenao.v1.ArticlePost.common:type_name -> zenao.v1.PostCommon
	19, // 11: zenao.v1.LinkPost.common:type_name -> zenao.v1.PostCommon
	19, // 12: zenao.v1.ImagePost.common:type_name -> zenao.v1.PostCommon
	19, // 13: zenao.v1.VideoPost.common:type_name -> zenao.v1.PostCommon
	18, // 14: zenao.v1.Reaction.post_id:type_name -> zenao.v1.PostID
	20, // 15: zenao.v1.Post.standard:type_name -> zenao.v1.StandardPost
	21, // 16: zenao.v1.Post.article:type_name -> zenao.v1.ArticlePost
	22, // 17: zenao.v1.Post.link:type_name -> zenao.v1.LinkPost
	23, // 18: zenao.v1.Post.image:type_name -> zenao.v1.ImagePost
	24, // 19: zenao.v1.Post.video:type_name -> zenao.v1.VideoPost
	0,  // 20: zenao.v1.ZenaoService.EditUser:input_type -> zenao.v1.EditUserRequest
	2,  // 21: zenao.v1.ZenaoService.GetUserAddress:input_type -> zenao.v1.GetUserAddressRequest
	4,  // 22: zenao.v1.ZenaoService.CreateEvent:input_type -> zenao.v1.CreateEventRequest
	6,  // 23: zenao.v1.ZenaoService.EditEvent:input_type -> zenao.v1.EditEventRequest
	8,  // 24: zenao.v1.ZenaoService.Participate:input_type -> zenao.v1.ParticipateRequest
	1,  // 25: zenao.v1.ZenaoService.EditUser:output_type -> zenao.v1.EditUserResponse
	3,  // 26: zenao.v1.ZenaoService.GetUserAddress:output_type -> zenao.v1.GetUserAddressResponse
	5,  // 27: zenao.v1.ZenaoService.CreateEvent:output_type -> zenao.v1.CreateEventResponse
	7,  // 28: zenao.v1.ZenaoService.EditEvent:output_type -> zenao.v1.EditEventResponse
	9,  // 29: zenao.v1.ZenaoService.Participate:output_type -> zenao.v1.ParticipateResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_zenao_v1_zenao_proto_init() }
func file_zenao_v1_zenao_proto_init() {
	if File_zenao_v1_zenao_proto != nil {
		return
	}
	file_zenao_v1_zenao_proto_msgTypes[10].OneofWrappers = []any{
		(*EventLocation_Geo)(nil),
		(*EventLocation_Virtual)(nil),
		(*EventLocation_Custom)(nil),
	}
	file_zenao_v1_zenao_proto_msgTypes[27].OneofWrappers = []any{
		(*Post_Standard)(nil),
		(*Post_Article)(nil),
		(*Post_Link)(nil),
		(*Post_Image)(nil),
		(*Post_Video)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_zenao_v1_zenao_proto_rawDesc), len(file_zenao_v1_zenao_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zenao_v1_zenao_proto_goTypes,
		DependencyIndexes: file_zenao_v1_zenao_proto_depIdxs,
		MessageInfos:      file_zenao_v1_zenao_proto_msgTypes,
	}.Build()
	File_zenao_v1_zenao_proto = out.File
	file_zenao_v1_zenao_proto_goTypes = nil
	file_zenao_v1_zenao_proto_depIdxs = nil
}
